{
  "tests": [
    {
      "name": "less_than_zero(): returns TRUE for negative numbers",
      "setup": "awk -F '\t' '$1 == 1 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 1 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "less_than_zero(): returns FALSE for zero",
      "setup": "awk -F '\t' '$1 == 2 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 2 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "less_than_zero(): returns FALSE for positive numbers",
      "setup": "awk -F '\t' '$1 == 3 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 3 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "less_than_zero(): returns a logical vector when a numeric vector is used as input",
      "setup": "awk -F '\t' '$1 == 4 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 4 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "less_than_zero(): returns a logical matrix when a matrix is used as input",
      "setup": "awk -F '\t' '$1 == 5 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 5 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "is_between(): returns TRUE when input is within open interval (a, b)",
      "setup": "awk -F '\t' '$1 == 6 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 6 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "is_between(): returns FALSE when input is not within open interval (a, b)",
      "setup": "awk -F '\t' '$1 == 7 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 7 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "is_between(): returns FALSE for endpoints as open intervals do not include endpoints",
      "setup": "awk -F '\t' '$1 == 8 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 8 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "is_between(): returns a logical vector when a numeric vector is input",
      "setup": "awk -F '\t' '$1 == 9 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 9 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "is_between(): returns a logical matrix when a matrix is input",
      "setup": "awk -F '\t' '$1 == 10 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 10 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "rm_na(): removes no NAs from a single input",
      "setup": "awk -F '\t' '$1 == 11 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 11 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "rm_na(): returns the same vector if no NAs present",
      "setup": "awk -F '\t' '$1 == 12 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 12 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "rm_na(): properly removes NAs when present in a vector",
      "setup": "awk -F '\t' '$1 == 13 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 13 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "rm_na(): returns a vector of length 0 if all values are NA",
      "setup": "awk -F '\t' '$1 == 14 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 14 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "row_medians(): returns correct row median on simulated data",
      "setup": "awk -F '\t' '$1 == 15 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 15 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_rows(): correctly summarizes the min",
      "setup": "awk -F '\t' '$1 == 16 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 16 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_rows(): correctly summarizes the max",
      "setup": "awk -F '\t' '$1 == 17 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 17 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_rows(): correctly summarizes the mean",
      "setup": "awk -F '\t' '$1 == 18 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 18 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): returns a dataframe",
      "setup": "awk -F '\t' '$1 == 19 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 19 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): returns the correct colnames in order",
      "setup": "awk -F '\t' '$1 == 20 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 20 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): correctly calculates the mean",
      "setup": "awk -F '\t' '$1 == 21 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 21 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): correctly calculates the stdev",
      "setup": "awk -F '\t' '$1 == 22 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 22 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): correctly calculates the median",
      "setup": "awk -F '\t' '$1 == 23 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 23 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): correctly calculates the min",
      "setup": "awk -F '\t' '$1 == 24 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 24 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): correctly calculates the max",
      "setup": "awk -F '\t' '$1 == 25 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 25 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): correctly calculates numbers less than zero",
      "setup": "awk -F '\t' '$1 == 26 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 26 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): correctly calculates numbers between 1 and 5",
      "setup": "awk -F '\t' '$1 == 27 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 27 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    },
    {
      "name": "summarize_matrix(): correctly determines number of NA",
      "setup": "awk -F '\t' '$1 == 28 { print \"testnum:\", $1, \"\\nresult:\", $2, \"\\ntest:\", $3, \"\\nmessage:\", $4; exit}' test_results.csv",
      "run": "awk -F '\t' '$1 == 28 { print; exit}' test_results.csv | grep -q -e 'success' -e 'warning'",
      "input": "",
      "output": "",
      "comparison": "exact",
      "timeout": 10,
      "points": 1
    }
  ]
}